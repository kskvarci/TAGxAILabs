{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customData": {
      "type": "string",
      "defaultValue": "#!/bin/sh\nsed 's/# c.JupyterHub.port = 8000/c.JupyterHub.port = 443/' /etc/jupyterhub/jupyterhub_config.py -i\ncd /home/azadmin/notebooks\ngit clone https://github.com/kskvarci/TAGxAILabs.git\nchmod u+x /home/azadmin/notebooks/TAGxAILabs/deploy/bootstrap.sh\n/home/azadmin/notebooks/TAGxAILabs/deploy/bootstrap.sh",
      "metadata": {
        "description": "String passed down to the Virtual Machine."
      }
    },
    "virtualMachineAdminUserName": {
      "defaultValue": "azadmin",
      "type": "string",
      "metadata": {
        "description": "Administrator Username for the local admin account"
      }
    },
    "virtualMachineAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for the local admin account"
      }
    },
    "virtualMachineNamePrefix": {
      "defaultValue": "dlvm",
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Name of the virtual machine to be created"
      }
    },
    "virtualMachineCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of  virtual machines to be created"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_NC6",
      "allowedValues": [
        "Standard_NC6",
        "Standard_NC6s_v3"
      ],
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },
    "availabilitySetName": {
      "defaultValue": "AIAvailabilitySet",
      "type": "string",
      "metadata": {
        "description": "Availability Set Name where the VM will be placed"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "myVNETName": "AILabVNET",
    "myVNETPrefix": "10.0.0.0/16",
    "myVNETSubnet1Name": "Subnet1",
    "myVNETSubnet1Prefix": "10.0.0.0/24",
    "diagnosticStorageAccountName": "[concat('diagst', uniqueString(resourceGroup().id))]",
    "availabilitySetPlatformFaultDomainCount": "2",
    "availabilitySetPlatformUpdateDomainCount": "5",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('myVNETName'),  variables('myVNETSubnet1Name'))]"
  },
  "resources": [
    {
      "name": "[variables('myVNETName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('myVNETName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('myVNETPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('myVNETSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('myVNETSubnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('diagnosticStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "diagnosticStorageAccount"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "plan": {
        "name": "linuxdsvmubuntu",
        "product": "linux-data-science-vm-ubuntu",
        "publisher": "microsoft-ads"
      },
      "copy": {
        "name": "VMcopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoft-ads",
            "offer": "linux-data-science-vm-ubuntu",
            "sku": "linuxdsvmubuntu",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1),'-osdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
                "storageAccountType": "Standard_LRS"
            },
          "diskSizeGB": 50
          },
          "dataDisks": [
            {
                "lun": 0,
                "name": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1),'-datadisk')]",
                "createOption": "FromImage",
                "caching": "None",
                "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                    
                },
                "diskSizeGB": 100
            }
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1))]",
          "adminUsername": "[parameters('virtualMachineAdminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachineAdminPassword')]",
          "customData": "[base64(parameters('customData'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1'))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "NICCopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AINSG')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('myVNETName'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/ba568362-caa1-45b2-9c54-469c3388d0c0/resourceGroups/AILabMachines-Rg/providers/Microsoft.Network/networkSecurityGroups/dsvm01_NSG'.",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "AINSG",
      "apiVersion": "2018-02-01",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "f46db77c-8b51-436b-8b4d-a950d506612c",
          "securityRules": [
              {
                  "name": "default-allow-ssh",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "22",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "default-allow-jupyterhub",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1010,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "default-allow-rstudio-server",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "8787",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1020,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              }
          ],
          "defaultSecurityRules": [
              {
                  "name": "AllowVnetInBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 65000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "AllowAzureLoadBalancerInBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Allow inbound traffic from azure load balancer",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 65001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "DenyAllInBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Deny all inbound traffic",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 65500,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "AllowVnetOutBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 65000,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "AllowInternetOutBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Allow outbound traffic from all VMs to Internet",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 65001,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                  "name": "DenyAllOutBound",
                  "etag": "W/\"fbee5aba-847b-411b-a0be-9ad00d450778\"",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "description": "Deny all outbound traffic",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 65500,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              }
          ]
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "PIPCopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "tags": {
        "displayName": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1))]"
        }
      }
    }
  ],
  "outputs": {}
}
